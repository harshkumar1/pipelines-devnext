valuesFilePath: ./values.yaml

pipelines:
  - name: a_java_{{ .Values.var.project }}
    configuration:
      nodePool: default-dynamic-nodepool
      jfrogCliVersion: 2
    steps:      
      - name: mvn_build
        type: MvnBuild
        configuration:
          integrations:
            - name: artifactory
          inputResources:
            - name: src_repo_{{ .Values.var.project }}
          outputResources:
            - name: mvn_build_info_{{ .Values.var.project }}
          affinityGroup: affinity_grp
          mvnCommand: clean install ## Change this to clean install
          forceXrayScan: false
          failOnScan: false
          autoPublishBuildInfo: true
        execution:
          onComplete:
            - save_tests $res_src_repo_{{ .Values.var.project }}_resourcePath/target/surefire-reports/
      
      - name: docker_build
        type: DockerBuild
        configuration:
          inputResources:
            - name: src_repo_{{ .Values.var.project }}
            - name: mvn_build_info_{{ .Values.var.project }}
          affinityGroup: affinity_grp
          integrations:
            - name: artifactory 
          dockerFileLocation: .
          dockerFileName: Dockerfile
          dockerImageName: "{{ .Values.var.jfrogPlatformInstance }}/cpe-docker-local-devnext/b_java_{{ .Values.var.project }}"
          dockerImageTag: ${run_number}
          outputResources:
           - name: docker_build_info_{{ .Values.var.project }}
      
      - name: docker_publish
        type: DockerPush
        configuration:
          inputResources:
            - name: src_repo_{{ .Values.var.project }}
            - name: docker_build_info_{{ .Values.var.project }}
          integrations:
            - name: artifactory
          affinityGroup: affinity_grp
          targetRepository: cpe-docker-local-devnext
          forceXrayScan: false
          failOnScan: false
          autoPublishBuildInfo: true
          outputResources:
            - name: docker_publish_info_{{ .Values.var.project }}
